
package manajemenPenjualan;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nia
 */
public class kasir extends javax.swing.JFrame {
    
    
    private JTextField totalharga;
    private JTextField totalseluruh;
    private JTextField kembalian;
    
    // Deklarasi variabel db
    private DefaultTableModel model;
    private databarang db;
    
    /**
     * Creates new form kasir
     */
    public kasir() {
        initComponents();
        
        
        // Tetapkan properti JTextField agar tidak dapat diedit
        txtTotalHarga.setEditable(false);
        txtTotalSeluruh.setEditable(false);
        txtKembalian.setEditable(false);
        txtBiayaAdmin.setEditable(false);
        
        
        // Menampilkan tanggal otomatis di jTanggal
        LocalDate today = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        jTanggal.setText(today.format(formatter));
        jTanggal.setEditable(false);
        
        // Inisialisasi variabel db dalam konstruktor
        db = new databarang();
        model = (DefaultTableModel) tabelData.getModel();
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTotalSeluruh = new javax.swing.JTextField();
        btnKembali = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSatuan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPencarianDatabase = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnBayar = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        txtKembalian = new javax.swing.JTextField();
        comboPembayaran = new javax.swing.JComboBox<>();
        txtTotalHarga = new javax.swing.JTextField();
        txtBayar = new javax.swing.JTextField();
        txtBiayaAdmin = new javax.swing.JTextField();
        jTanggal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelData = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 158));

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 204));
        jLabel2.setText("Jalan Raya Cempaka Sari No.22");

        txtTotalSeluruh.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        txtTotalSeluruh.setForeground(new java.awt.Color(153, 204, 255));
        txtTotalSeluruh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalSeluruhActionPerformed(evt);
            }
        });

        btnKembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/exit.png"))); // NOI18N
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("TOKO JAYA AMERTHA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addComponent(txtTotalSeluruh, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTotalSeluruh, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKembali)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addGap(30, 30, 30))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("Nama Barang");

        txtNamaBarang.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaBarangActionPerformed(evt);
            }
        });

        jLabel6.setText("Jumlah");

        txtJumlah.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel7.setText("Satuan");

        txtSatuan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        tabelPencarianDatabase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Barang", "Nama Barang", "Merk", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelPencarianDatabase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPencarianDatabaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPencarianDatabase);

        btnEdit.setBackground(new java.awt.Color(0, 51, 255));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/update.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(0, 51, 255));
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/delete.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(0, 51, 255));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/clean.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnTambah.setBackground(new java.awt.Color(0, 51, 255));
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/add.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setText("Total Harga");

        jLabel12.setText("Jumlah Bayar");

        btnBayar.setBackground(new java.awt.Color(0, 51, 255));
        btnBayar.setForeground(new java.awt.Color(255, 255, 255));
        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });

        btnCetak.setBackground(new java.awt.Color(229, 221, 221));
        btnCetak.setText("Cetak Struk");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        txtKembalian.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        txtKembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKembalianActionPerformed(evt);
            }
        });

        comboPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Transfer", "e-Payment" }));
        comboPembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPembayaranActionPerformed(evt);
            }
        });

        txtTotalHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalHargaActionPerformed(evt);
            }
        });

        tabelData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Harga", "Jumlah", "Satuan", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelData);

        jLabel8.setText("Tanggal");

        jLabel9.setText("Pembayaran");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Kembalian");

        jLabel3.setText("Tabel Data");

        jLabel5.setText("Tabel Pencarian Barang");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKembalian)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTanggal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboPembayaran, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBiayaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(250, 250, 250)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTotalHarga)
                                            .addComponent(txtBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(413, 413, 413)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(txtSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 940, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1)))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(jLabel5)
                    .addContainerGap(990, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNamaBarang)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txtBiayaAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(177, 177, 177)
                    .addComponent(jLabel5)
                    .addContainerGap(630, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:

        this.dispose(); // Menutup jendela saat ini
        new pilihLogin().setVisible(true); // Membuka jendela pilihLogin
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void txtTotalSeluruhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalSeluruhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalSeluruhActionPerformed

    private void txtNamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaBarangActionPerformed
        // TODO add your handling code here:
        
        // Mendapatkan nilai dari JTextField txtNamaBarang
         String namaBarang = txtNamaBarang.getText();
    
        // Memanggil metode untuk melakukan pencarian dan menampilkan data
        searchItem(namaBarang);
        txtNamaBarang.setText("");
    }//GEN-LAST:event_txtNamaBarangActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        

        // Get the selected row untuk tabelData
        int selectedRow = tabelData.getSelectedRow();

        if (selectedRow != -1) {  // Check if a row is selected
            // Get new values from the text fields
            String jumlahStr = txtJumlah.getText();

            // Validate if jumlahStr is a valid integer
            try {
                int jumlah = Integer.parseInt(jumlahStr);
                // Update the selected row with new values
                DefaultTableModel model = (DefaultTableModel) tabelData.getModel();
                model.setValueAt(jumlahStr, selectedRow, 2); // Update jumlah

                // Update total in tabelData
                int harga = (int) model.getValueAt(selectedRow, 1); // Get harga from tabelData
                int total = harga * jumlah; // Calculate new total
                model.setValueAt(total, selectedRow, 4); // Update total in tabelData

                // Call updateTotalHarga to recalculate total
                updateTotalHarga();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Jumlah harus berupa angka", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            }

            // Clear the text fields after editing
            txtNamaBarang.setText("");
            txtJumlah.setText("");
            txtSatuan.setText("");
        } else {
            // Optionally, show a message dialog if no row is selected
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan diedit", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:

        //Mendapatkan index baris yang dipilih
        int row = tabelData.getSelectedRow();

        //Memastikan baris yang dipilih valid
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Menghapus baris yang dipilih dari tabel
        DefaultTableModel tbl = (DefaultTableModel) tabelData.getModel();
        tbl.removeRow(row);

        //Mengupdate total harga setelah menghapus baris
        updateTotalHarga();

        // Mengosongkan input fields ketika berhasil ditambah
        txtNamaBarang.setText("");
        txtJumlah.setText("");
        txtSatuan.setText("");

    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:

        // Mengosongkan semua input fields
        txtNamaBarang.setText("");
        txtJumlah.setText("");
        txtSatuan.setText("");

        txtBayar.setText("");
        txtKembalian.setText("");

        // Membersihkan tabel data
        DefaultTableModel tpd = (DefaultTableModel) tabelPencarianDatabase.getModel();
        tpd.setRowCount(0);

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:

            
        if (txtNamaBarang.getText().isEmpty() ||
            txtJumlah.getText().isEmpty()){

            JOptionPane.showMessageDialog(this, "Mohon lengkapi semua bagian kosong!.");
            return; 
        }

        //Menambah data
        String namaBarang = txtNamaBarang.getText();
        int harga = Integer.parseInt(txtTotalHarga.getText());
        int jumlah = Integer.parseInt(txtJumlah.getText());
        String satuan = txtSatuan.getText();
        int total = harga * jumlah;
        
        model.addRow(new Object[]{namaBarang, harga, jumlah, satuan, total});
        calculateTotal();

        // Mengosongkan input fields ketika berhasil ditambah
        txtNamaBarang.setText("");
        txtJumlah.setText("");
        txtSatuan.setText("");
        
        DefaultTableModel model = (DefaultTableModel) tabelPencarianDatabase.getModel();
        model.setRowCount(0);
        

    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        // TODO add your handling code here:


         // Mengecek apakah tabel kosong
        DefaultTableModel tbl = (DefaultTableModel) tabelData.getModel();
        if (tbl.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Anda belum memasukkan data apapun.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Menghentikan eksekusi jika tabel kosong
        }

        // Mengecek apakah field pembayaran kosong
        if (txtBayar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mohon masukkan jumlah yang dibayarkan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Menghentikan eksekusi jika field pembayaran kosong
        }
            
            try {
            int totalHarga = Integer.parseInt(txtTotalHarga.getText().replace("Rp. ", ""));
            int bayar = Integer.parseInt(txtBayar.getText());
            
            // Memulai transaksi untuk mengurangi stok di database
            if (bayar >= totalHarga) {
                // Decrease stock in the database

                try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/db_penjualan", "root", "")) {
                    conn.setAutoCommit(false); // Start transaction

                    for (int i = 0; i < tbl.getRowCount(); i++) {
                        String itemName = tbl.getValueAt(i, 0).toString();
                        int jumlah = Integer.parseInt(tbl.getValueAt(i, 2).toString());

                        String sql = "UPDATE tb_databarang SET stok = stok - ?, tgl_keluar = ? WHERE nama_barang = ?";
                        
                        // Mendapatkan tanggal saat ini
                        java.util.Date tanggalSekarang = new java.util.Date();
                        java.sql.Date tanggalSql = new java.sql.Date(tanggalSekarang.getTime());
                        
                        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                            pstmt.setInt(1, jumlah);
                            pstmt.setDate(2, tanggalSql);
                            pstmt.setString(3, itemName);
                            pstmt.executeUpdate();
                        }catch (SQLException ex) {
                            conn.rollback(); // Mengembalikan transaksi jika terjadi kesalahan
                            throw new SQLException("Gagal mengupdate stok barang: " + ex.getMessage());
                        }
                    }

                    conn.commit(); // Commit transaction
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage());
                    return; // Menghentikan eksekusi lebih lanjut jika terjadi kesalahan database
                }

                int kembalian = bayar - totalHarga;
                txtKembalian.setText("Rp. " + kembalian);
                JOptionPane.showMessageDialog(null, "Pembayaran Berhasil!");
            } else {
                JOptionPane.showMessageDialog(null, "Pembayaran Gagal! Jumlah bayar kurang.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Input tidak valid. Pastikan semua nilai berupa angka.");
        }

   
              

    }//GEN-LAST:event_btnBayarActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:

        //untuk data barang

        try {
            printReceipt();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Gagal mencetak struk belanja.", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
        txtNamaBarang.setText("");
        txtJumlah.setText("");
        txtSatuan.setText("");
        model.setRowCount(0);
        txtTotalSeluruh.setText("");
        txtBayar.setText("");
        txtKembalian.setText("");
        txtBiayaAdmin.setText("");
        txtTotalHarga.setText("");
        
    }//GEN-LAST:event_btnCetakActionPerformed

    private void txtKembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKembalianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKembalianActionPerformed

    private void comboPembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPembayaranActionPerformed
        // TODO add your handling code here:

        // Memilih jenis pembayaran
        if (tabelData.getRowCount() == 0) {
            // Tabel masih kosong, tampilkan pesan kesalahan
            JOptionPane.showMessageDialog(this, "Silakan isi data pada tabel terlebih dahulu.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String selectedPaymentMethod = comboPembayaran.getSelectedItem().toString();

        // Menghitung & menampilkan sesuai dengan jenis pembayaran yang dipilih
        switch (selectedPaymentMethod) {
            case "Cash":
                txtBiayaAdmin.setText("Rp. 0");
                break;
            case "Transfer":
                txtBiayaAdmin.setText("Rp. 2500");
                break;
            case "e-Payment":
                txtBiayaAdmin.setText("Rp. 2000");
                break;
            default:
                // Handle unexpected payment method
                JOptionPane.showMessageDialog(this, "Metode pembayaran tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Keluar dari metode jika metode pembayaran tidak valid
        }

        // Update total seluruh setelah menghitung biaya admin
        String totalHargaText = txtTotalHarga.getText();
        String biayaAdminText = txtBiayaAdmin.getText();

        // Validasi panjang string sebelum melakukan operasi substring
        if (totalHargaText.length() < 4 || biayaAdminText.length() < 4) {
            JOptionPane.showMessageDialog(this, "Panjang string tidak mencukupi untuk operasi.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lakukan perhitungan
        int totalHargaBarang = Integer.parseInt(totalHargaText.substring(4).replace(".", ""));
        int biayaAdmin = Integer.parseInt(biayaAdminText.substring(4).replace(".", ""));
        int totalSeluruh = totalHargaBarang + biayaAdmin;

        // Tampilkan total seluruh
        txtTotalSeluruh.setText("Rp. " + totalSeluruh);

        // Update total harga dan total seluruh
        calculateTotal();
        

    }//GEN-LAST:event_comboPembayaranActionPerformed

    private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
        // TODO add your handling code here:

        // Mendapatkan index baris yang dipilih
        int row = tabelData.getSelectedRow();

        // Menampilkan data ke dalam input fields
        txtNamaBarang.setText(tabelData.getValueAt(row, 0).toString());
        txtJumlah.setText(tabelData.getValueAt(row, 2).toString());
        txtSatuan.setText(tabelData.getValueAt(row, 3).toString());
        
    }//GEN-LAST:event_tabelDataMouseClicked

    private void tabelPencarianDatabaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPencarianDatabaseMouseClicked
        // TODO add your handling code here:
        
       // Mendapatkan nilai baris yang diklik
        int selectedRow = tabelPencarianDatabase.getSelectedRow();
        String namaBarang = tabelPencarianDatabase.getValueAt(selectedRow, 1).toString();
        int harga = (int) tabelPencarianDatabase.getValueAt(selectedRow, 3);
        txtNamaBarang.setText(namaBarang);
        txtTotalHarga.setText(String.valueOf(harga));
    
    
    }//GEN-LAST:event_tabelPencarianDatabaseMouseClicked

    private void txtTotalHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalHargaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> comboPembayaran;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTanggal;
    private javax.swing.JTable tabelData;
    private javax.swing.JTable tabelPencarianDatabase;
    private javax.swing.JTextField txtBayar;
    private javax.swing.JTextField txtBiayaAdmin;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtKembalian;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtSatuan;
    private javax.swing.JTextField txtTotalHarga;
    private javax.swing.JTextField txtTotalSeluruh;
    // End of variables declaration//GEN-END:variables

    
        private void updateTotalHarga() {
        DefaultTableModel tbl = (DefaultTableModel) tabelData.getModel();
        int totalHarga = 0;

        for (int i = 0; i < tbl.getRowCount(); i++) {
            int harga = Integer.parseInt(tbl.getValueAt(i, 1).toString());
            int jumlah = Integer.parseInt(tbl.getValueAt(i, 2).toString());
            totalHarga += harga * jumlah; // Hitung total harga
        }

        txtTotalHarga.setText("Rp. " + totalHarga);
        txtTotalSeluruh.setText("Rp. " + totalHarga);
        }
    
    
    //struk method
    private void printReceipt() throws PrinterException {

        StringBuilder receipt = new StringBuilder();
        receipt.append("".format("%-30s", "=================================\n"));
        receipt.append("".format("%-30s", "          TOKO JAYA AMERTHA\n Jalan Raya Cempaka Sari No.22 \n"));
        receipt.append("".format("%-30s", "=================================\n"));
        
        receipt.append("Tanggal: ").append(jTanggal.getText()).append("\n");
        receipt.append("--------------------------------\n");
        
        DefaultTableModel model = (DefaultTableModel) tabelData.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String namaBarang = model.getValueAt(i, 0).toString();
            String hargaBarang = model.getValueAt(i, 1).toString();
            String jumlah = model.getValueAt(i, 2).toString();
            String satuan = model.getValueAt(i, 3).toString();
            String total = model.getValueAt(i, 4).toString();

            receipt.append(namaBarang).append("\n");
            receipt.append(" ").append(hargaBarang).append(" ").append(jumlah).append(" buah ").append(total).append("\n");
        }

        receipt.append("--------------------------------\n");
        receipt.append("Total Harga = ").append(txtTotalHarga.getText()).append("\n");
        receipt.append("Bayar = ").append("Rp. ").append(txtBayar.getText()).append("\n");
        receipt.append("--------------------------------\n");
        receipt.append("Kembali = ").append(txtKembalian.getText()).append("\n");
        receipt.append("".format("%-30s", "\n========== TERIMA KASIH ==========="));

        JTextArea textArea = new JTextArea(receipt.toString());
        textArea.setFont(new Font("Monospaced", Font.PLAIN, 12));
        textArea.setMargin(new Insets(15, 15, 15, 15));
        textArea.setEditable(false);

        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setPreferredSize(new Dimension(400, 400));

        JOptionPane.showMessageDialog(this, scrollPane, "Struk Belanja", JOptionPane.PLAIN_MESSAGE);

        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable((Graphics graphics, PageFormat pageFormat, int pageIndex) -> {
            if (pageIndex > 0) {
                return Printable.NO_SUCH_PAGE;
            }
            graphics.setFont(new Font("Monospaced", Font.PLAIN, 12));
            Graphics2D g2d = (Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
            textArea.printAll(graphics);
            return Printable.PAGE_EXISTS;
        });

        boolean printDialogAccepted = job.printDialog();
        if (printDialogAccepted) {
            job.print();
        }
    }
    
    //Method mencari data barang di kasir
    private void searchItem(String namaBarang) {
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/db_penjualan", "root", "")) {
            String query = "SELECT * FROM tb_databarang WHERE nama_barang LIKE ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, "%" + namaBarang + "%");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel searchModel = (DefaultTableModel) tabelPencarianDatabase.getModel();
            searchModel.setRowCount(0);

            while (rs.next()) {
                searchModel.addRow(new Object[]{rs.getString("kode_barang"), rs.getString("nama_barang"), rs.getString("merk"), rs.getInt("harga")});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    //method total seluruh
    private void calculateTotal() {
        int rowCount = model.getRowCount();
        int total = 0;

        // Menghitung total dari kolom ke-4 pada setiap baris model
        for (int i = 0; i < rowCount; i++) {
            total += (int) model.getValueAt(i, 4);
        }

        // Set nilai total harga dan total seluruh
        txtTotalHarga.setText("Rp. " + total);
        txtTotalSeluruh.setText("Rp. " + total);

        // Ambil teks dari txtBiayaAdmin
        String biayaAdminText = txtBiayaAdmin.getText();

        // Potong teks dari indeks ke-4, hapus titik (.) jika ada, dan konversi ke integer
        // Tetapi pastikan panjang teks cukup untuk di-substring dari indeks 4
        if (biayaAdminText.length() >= 4) {
            String biayaAdminSubstring = biayaAdminText.substring(4).replace(".", "");
            int biayaAdmin = Integer.parseInt(biayaAdminSubstring);

            // Hitung total seluruh dengan biaya admin
            int totalSeluruh = total + biayaAdmin;
            txtTotalSeluruh.setText("Rp. " + totalSeluruh);
            txtTotalHarga.setText("Rp. " + totalSeluruh);
        }
    }
    

}
